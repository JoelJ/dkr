#!/bin/bash -e

export DKR_NAME="$(basename $0)"
if [ "${DKR_HOME}" == "" ]; then
	export DKR_HOME=~/.dkr
fi

if [ "${DKR_COMMAND}" == "" ]; then
	export DKR_COMMAND=docker
fi

function debug {
	if [ "${DKR_DEBUG}" != "" ]; then
		echo "$@" >&2
	fi
}

function err {
	echo "$@" >&2
}

function usage {
	echo "Dkr - Extendable docker cli wrapper"
	echo ""
	echo "Dkr exposes all the standard docker commands:"

	"${DKR_COMMAND}" --help | sed "s:docker COMMAND --help:${DKR_NAME} COMMAND --help:g" | tail -n +3 | tail -n +5

	echo ""
	echo "Extensions:"
	echo ""

	for option in $(declare -F | grep -Eo "dkr-.*"); do
		if [[ "${option}" != *-summary_ ]] && [[ "${option}" != *-help_ ]]; then
			set +e
			2>/dev/null 1>/dev/null type "${option}-summary_"
			exitCode=$?
			set -e

			if [ "${exitCode}" == "0" ]; then
				echo "    ${option:4} - $(eval ${option}-summary_)"
			else
				echo "    ${option:4}"
			fi
		fi
	done

	echo ""
	echo "See README for more information on extending dkr"
}

for file in $(ls /usr/local/var/dkr/*); do
	if [[ -x ${file} ]]; then
		debug "Sourcing ${file}"
		source ${file}
	else
		debug "Skipping ${file}. Not Executable."
	fi
done

for file in $(ls ${DKR_HOME}/*); do
	if [[ -x ${file} ]]; then
		debug "Sourcing ${file}"
		source ${file}
	else
		debug "Skipping ${file}. Not Executable."
	fi
done

if [ "$1" == "" ]; then
	usage
	exit 1
fi

set +e
2>/dev/null 1>/dev/null type "dkr-$1"
exitCode=$?
set -e

if [ "$exitCode" == "0" ]; then
	if [[ "$@" =~ '--help' ]]; then
		command="dkr-$1-help_"

		set +e
		2>/dev/null 1>/dev/null type "${command}"
		exitCode=$?
		set -e

		if [ "${exitCode}" == "0" ]; then
			eval "${command}"
		else
			echo "No help available for this command"
			exit 2
		fi
	else
		command="dkr-$1"
		shift
		eval "${command}" "$@"
	fi
else
	if [[ "$@" =~ '--help' ]]; then
		"${DKR_COMMAND}" "$@" | sed "s#Usage:\s*docker#Usage:  ${DKR_NAME}#g"
	else
		"${DKR_COMMAND}" "$@"
	fi
fi
